// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractAOSServiceManager

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// IPaymentCoordinatorRangePayment is an auto generated low-level Go binding around an user-defined struct.
type IPaymentCoordinatorRangePayment struct {
	StrategiesAndMultipliers []IPaymentCoordinatorStrategyAndMultiplier
	Token                    common.Address
	Amount                   *big.Int
	StartTimestamp           uint32
	Duration                 uint32
}

// IPaymentCoordinatorStrategyAndMultiplier is an auto generated low-level Go binding around an user-defined struct.
type IPaymentCoordinatorStrategyAndMultiplier struct {
	Strategy   common.Address
	Multiplier *big.Int
}

// ISignatureUtilsSignatureWithSaltAndExpiry is an auto generated low-level Go binding around an user-defined struct.
type ISignatureUtilsSignatureWithSaltAndExpiry struct {
	Signature []byte
	Salt      [32]byte
	Expiry    *big.Int
}

// ContractAOSServiceManagerMetaData contains all meta data concerning the ContractAOSServiceManager contract.
var ContractAOSServiceManagerMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_avsDirectory\",\"type\":\"address\",\"internalType\":\"contractIAVSDirectory\"},{\"name\":\"_registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"_stakeRegistry\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"PAUSED_OPERTOR_REGISTRATION\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"avsDirectory\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"deregisterOperatorFromAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getNumOperators\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getOperatorRestakedStrategies\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getOperatorsInRange\",\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getRestakeableStrategies\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_pauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"},{\"name\":\"_initialPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_initialOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"operatorRanges\",\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"start\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"end\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"operators\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"pauseAll\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[{\"name\":\"index\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pauserRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"payForRange\",\"inputs\":[{\"name\":\"rangePayments\",\"type\":\"tuple[]\",\"internalType\":\"structIPaymentCoordinator.RangePayment[]\",\"components\":[{\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\",\"internalType\":\"structIPaymentCoordinator.StrategyAndMultiplier[]\",\"components\":[{\"name\":\"strategy\",\"type\":\"address\",\"internalType\":\"contractIStrategy\"},{\"name\":\"multiplier\",\"type\":\"uint96\",\"internalType\":\"uint96\"}]},{\"name\":\"token\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"amount\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"startTimestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"duration\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"registerOperatorToAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"operatorSignature\",\"type\":\"tuple\",\"internalType\":\"structISignatureUtils.SignatureWithSaltAndExpiry\",\"components\":[{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"salt\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"expiry\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setPauserRegistry\",\"inputs\":[{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"unpause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateAVSMetadataURI\",\"inputs\":[{\"name\":\"_metadataURI\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateOperatorRange\",\"inputs\":[{\"name\":\"operatorAddress\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"start\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"end\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Paused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"PauserRegistrySet\",\"inputs\":[{\"name\":\"pauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"},{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Unpaused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false}]",
	Bin: "0x6101006040523480156200001257600080fd5b5060405162002a5138038062002a5183398101604081905262000035916200015c565b6001600160a01b03808416608052600060a081905281841660c05290821660e052839083836200006462000081565b50505050620000786200008160201b60201c565b505050620001b0565b600054610100900460ff1615620000ee5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101562000141576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200015957600080fd5b50565b6000806000606084860312156200017257600080fd5b83516200017f8162000143565b6020850151909350620001928162000143565b6040850151909250620001a58162000143565b809150509250925092565b60805160a05160c05160e0516127fe6200025360003960008181610a0601528181610b6201528181610bf90152818161161501528181611799015261183801526000818161082d015281816108bc0152818161093c0152818161112e015281816112f00152818161155301526116f40152600081816106bd015261079b015260008181610210015281816112200152818161134c015261139a01526127fe6000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063d989a5911161007c578063d989a59114610322578063e28d49061461032a578063e481af9d1461033d578063e9f7903f14610345578063f2fde38b1461035f578063fabc1cbc1461037257600080fd5b80638da5cb5b146102895780639926ee7d1461029a578063a364f4da146102ad578063a98fb355146102c0578063c350a1b5146102d3578063d50b1f4e146102e657600080fd5b80635c975abb116101155780635c975abb146101fc5780636b3aa72e1461020e578063715018a614610248578063784afa0c14610250578063866d204b14610263578063886f11951461027657600080fd5b806310d67a2f1461015d578063136439dd146101725780631b4455161461018557806333cfb7b714610198578063595c6a67146101c15780635ac86ab7146101c9575b600080fd5b61017061016b366004611f54565b610385565b005b610170610180366004611f78565b610441565b610170610193366004611f91565b610580565b6101ab6101a6366004611f54565b610808565b6040516101b89190612006565b60405180910390f35b610170610cdc565b6101ec6101d7366004612062565b609854600160ff9092169190911b9081161490565b60405190151581526020016101b8565b6098545b6040519081526020016101b8565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016101b8565b610170610da3565b6101ab61025e366004611f78565b610db7565b61017061027136600461207f565b610f77565b609754610230906001600160a01b031681565b6033546001600160a01b0316610230565b6101706102a8366004612169565b6110ce565b6101706102bb366004611f54565b611290565b6101706102ce366004612214565b61137b565b6101706102e1366004612265565b611404565b61030d6102f4366004611f54565b60c9602052600090815260409020805460019091015482565b604080519283526020830191909152016101b8565b60ca54610200565b610230610338366004611f78565b611523565b6101ab61154d565b61034d600181565b60405160ff90911681526020016101b8565b61017061036d366004611f54565b611917565b610170610380366004611f78565b61198d565b609760009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fc91906122a7565b6001600160a01b0316336001600160a01b0316146104355760405162461bcd60e51b815260040161042c906122c4565b60405180910390fd5b61043e81611ae9565b50565b60975460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ad919061230e565b6104c95760405162461bcd60e51b815260040161042c90612330565b609854818116146105425760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c6974790000000000000000606482015260840161042c565b609881905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b610588611be0565b60005b81811015610783578282828181106105a5576105a5612378565b90506020028101906105b7919061238e565b6105c8906040810190602001611f54565b6001600160a01b03166323b872dd33308686868181106105ea576105ea612378565b90506020028101906105fc919061238e565b604080516001600160e01b031960e087901b1681526001600160a01b039485166004820152939092166024840152013560448201526064016020604051808303816000875af1158015610653573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610677919061230e565b5082828281811061068a5761068a612378565b905060200281019061069c919061238e565b6106ad906040810190602001611f54565b6001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000008585858181106106ee576106ee612378565b9050602002810190610700919061238e565b604080516001600160e01b031960e086901b1681526001600160a01b039093166004840152013560248201526044016020604051808303816000875af115801561074e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610772919061230e565b5061077c816123d4565b905061058b565b50604051630da22a8b60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631b445516906107d29085908590600401612488565b600060405180830381600087803b1580156107ec57600080fd5b505af1158015610800573d6000803e3d6000fd5b505050505050565b6040516309aa152760e11b81526001600160a01b0382811660048301526060916000917f000000000000000000000000000000000000000000000000000000000000000016906313542a4e90602401602060405180830381865afa158015610874573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108989190612596565b60405163871ef04960e01b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063871ef04990602401602060405180830381865afa158015610903573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092791906125af565b90506001600160c01b03811615806109c157507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc91906125d8565b60ff16155b156109e15760408051600080825260208201909252905b50949350505050565b60006109f5826001600160c01b0316611c3a565b90506000805b8251811015610acb577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ca5a5f5848381518110610a4557610a45612378565b01602001516040516001600160e01b031960e084901b16815260f89190911c6004820152602401602060405180830381865afa158015610a89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aad9190612596565b610ab790836125f5565b915080610ac3816123d4565b9150506109fb565b5060008167ffffffffffffffff811115610ae757610ae76120b4565b604051908082528060200260200182016040528015610b10578160200160208202803683370190505b5090506000805b8451811015610ccf576000858281518110610b3457610b34612378565b0160200151604051633ca5a5f560e01b815260f89190911c6004820181905291506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633ca5a5f590602401602060405180830381865afa158015610ba9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcd9190612596565b905060005b81811015610cb9576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa158015610c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b919061260d565b60000151868681518110610c8157610c81612378565b6001600160a01b039092166020928302919091019091015284610ca3816123d4565b9550508080610cb1906123d4565b915050610bd2565b5050508080610cc7906123d4565b915050610b17565b5090979650505050505050565b60975460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610d24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d48919061230e565b610d645760405162461bcd60e51b815260040161042c90612330565b600019609881905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b610dab611be0565b610db56000611cfd565b565b60ca5460609060009067ffffffffffffffff811115610dd857610dd86120b4565b604051908082528060200260200182016040528015610e01578160200160208202803683370190505b5090506000805b60ca54811015610ece57600060ca8281548110610e2757610e27612378565b60009182526020808320909101546001600160a01b031680835260c9825260409283902083518085019094528054808552600191909101549284019290925292508710801590610e7b575080602001518711155b15610eb95781858581518110610e9357610e93612378565b6001600160a01b039092166020928302919091019091015283610eb5816123d4565b9450505b50508080610ec6906123d4565b915050610e08565b5060008167ffffffffffffffff811115610eea57610eea6120b4565b604051908082528060200260200182016040528015610f13578160200160208202803683370190505b50905060005b828110156109d857838181518110610f3357610f33612378565b6020026020010151828281518110610f4d57610f4d612378565b6001600160a01b039092166020928302919091019091015280610f6f816123d4565b915050610f19565b610f7f611be0565b610f8883611d4f565b610fd45760405162461bcd60e51b815260206004820152601760248201527f4f70657261746f72206e6f742072656769737465726564000000000000000000604482015260640161042c565b8082106110335760405162461bcd60e51b815260206004820152602760248201527f53746172742072616e6765206d757374206265206c657373207468616e20656e604482015266642072616e676560c81b606482015260840161042c565b620927c08111156110945760405162461bcd60e51b815260206004820152602560248201527f456e642072616e67652063616e6e6f7420657863656564206d6178696d756d2060448201526472616e676560d81b606482015260840161042c565b60408051808201825292835260208084019283526001600160a01b03909416600090815260c9909452909220905181559051600190910155565b609854600190600290811614156111235760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b604482015260640161042c565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461116b5760405162461bcd60e51b815260040161042c9061266c565b61117483611d4f565b156111c15760405162461bcd60e51b815260206004820152601b60248201527f4f70657261746f7220616c726561647920726567697374657265640000000000604482015260640161042c565b60ca80546001810182556000919091527f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee10180546001600160a01b0319166001600160a01b0385811691909117909155604051639926ee7d60e01b81527f000000000000000000000000000000000000000000000000000000000000000090911690639926ee7d906112599086908690600401612731565b600060405180830381600087803b15801561127357600080fd5b505af1158015611287573d6000803e3d6000fd5b50505050505050565b609854600190600290811614156112e55760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b604482015260640161042c565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461132d5760405162461bcd60e51b815260040161042c9061266c565b6040516351b27a6d60e11b81526001600160a01b0383811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a364f4da906024016107d2565b611383611be0565b60405163a98fb35560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a98fb355906113cf90849060040161277c565b600060405180830381600087803b1580156113e957600080fd5b505af11580156113fd573d6000803e3d6000fd5b5050505050565b600054610100900460ff16158080156114245750600054600160ff909116105b8061143e5750303b15801561143e575060005460ff166001145b6114a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161042c565b6000805460ff1916600117905580156114c4576000805461ff0019166101001790555b6114ce8484611db9565b6114d782611ea3565b801561151d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60ca818154811061153357600080fd5b6000918252602090912001546001600160a01b0316905081565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d391906125d8565b60ff169050806115f157505060408051600081526020810190915290565b6000805b828110156116a657604051633ca5a5f560e01b815260ff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa158015611664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116889190612596565b61169290836125f5565b91508061169e816123d4565b9150506115f5565b5060008167ffffffffffffffff8111156116c2576116c26120b4565b6040519080825280602002602001820160405280156116eb578160200160208202803683370190505b5090506000805b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611750573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177491906125d8565b60ff1681101561190d57604051633ca5a5f560e01b815260ff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa1580156117e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180c9190612596565b905060005b818110156118f8576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa158015611886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118aa919061260d565b600001518585815181106118c0576118c0612378565b6001600160a01b0390921660209283029190910190910152836118e2816123d4565b94505080806118f0906123d4565b915050611811565b50508080611905906123d4565b9150506116f2565b5090949350505050565b61191f611be0565b6001600160a01b0381166119845760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042c565b61043e81611cfd565b609760009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0491906122a7565b6001600160a01b0316336001600160a01b031614611a345760405162461bcd60e51b815260040161042c906122c4565b609854198119609854191614611ab25760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c6974790000000000000000606482015260840161042c565b609881905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610575565b6001600160a01b038116611b775760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a40161042c565b609754604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1609780546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b03163314610db55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042c565b6060600080611c4884611f0e565b61ffff1667ffffffffffffffff811115611c6457611c646120b4565b6040519080825280601f01601f191660200182016040528015611c8e576020820181803683370190505b5090506000805b825182108015611ca6575061010081105b1561190d576001811b935085841615611ced578060f81b838381518110611ccf57611ccf612378565b60200101906001600160f81b031916908160001a9053508160010191505b611cf6816123d4565b9050611c95565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000805b60ca54811015611db057826001600160a01b031660ca8281548110611d7a57611d7a612378565b6000918252602090912001546001600160a01b03161415611d9e5750600192915050565b80611da8816123d4565b915050611d53565b50600092915050565b6097546001600160a01b0316158015611dda57506001600160a01b03821615155b611e5c5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a40161042c565b609881905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2611e9f82611ae9565b5050565b600054610100900460ff166119845760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161042c565b6000805b8215611f3957611f2360018461278f565b9092169180611f31816127a6565b915050611f12565b92915050565b6001600160a01b038116811461043e57600080fd5b600060208284031215611f6657600080fd5b8135611f7181611f3f565b9392505050565b600060208284031215611f8a57600080fd5b5035919050565b60008060208385031215611fa457600080fd5b823567ffffffffffffffff80821115611fbc57600080fd5b818501915085601f830112611fd057600080fd5b813581811115611fdf57600080fd5b8660208260051b8501011115611ff457600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b818110156120475783516001600160a01b031683529284019291840191600101612022565b50909695505050505050565b60ff8116811461043e57600080fd5b60006020828403121561207457600080fd5b8135611f7181612053565b60008060006060848603121561209457600080fd5b833561209f81611f3f565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156120ed576120ed6120b4565b60405290565b600067ffffffffffffffff8084111561210e5761210e6120b4565b604051601f8501601f19908116603f01168101908282118183101715612136576121366120b4565b8160405280935085815286868601111561214f57600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561217c57600080fd5b823561218781611f3f565b9150602083013567ffffffffffffffff808211156121a457600080fd5b90840190606082870312156121b857600080fd5b6121c06120ca565b8235828111156121cf57600080fd5b83019150601f820187136121e257600080fd5b6121f1878335602085016120f3565b815260208301356020820152604083013560408201528093505050509250929050565b60006020828403121561222657600080fd5b813567ffffffffffffffff81111561223d57600080fd5b8201601f8101841361224e57600080fd5b61225d848235602084016120f3565b949350505050565b60008060006060848603121561227a57600080fd5b833561228581611f3f565b925060208401359150604084013561229c81611f3f565b809150509250925092565b6000602082840312156122b957600080fd5b8151611f7181611f3f565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b60006020828403121561232057600080fd5b81518015158114611f7157600080fd5b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60008235609e198336030181126123a457600080fd5b9190910192915050565b80356123b981611f3f565b919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156123e8576123e86123be565b5060010190565b6bffffffffffffffffffffffff8116811461043e57600080fd5b8183526000602080850194508260005b8581101561246957813561242c81611f3f565b6001600160a01b0316875281830135612444816123ef565b6bffffffffffffffffffffffff16878401526040968701969190910190600101612419565b509495945050505050565b803563ffffffff811681146123b957600080fd5b60208082528181018390526000906040808401600586901b8501820187855b8881101561258857878303603f190184528135368b9003609e190181126124cd57600080fd5b8a0160a0813536839003601e190181126124e657600080fd5b8201803567ffffffffffffffff8111156124ff57600080fd5b8060061b360384131561251157600080fd5b828752612523838801828c8501612409565b925050506125328883016123ae565b6001600160a01b03168886015281870135878601526060612554818401612474565b63ffffffff1690860152608061256b838201612474565b63ffffffff169501949094525092850192908501906001016124a7565b509098975050505050505050565b6000602082840312156125a857600080fd5b5051919050565b6000602082840312156125c157600080fd5b81516001600160c01b0381168114611f7157600080fd5b6000602082840312156125ea57600080fd5b8151611f7181612053565b60008219821115612608576126086123be565b500190565b60006040828403121561261f57600080fd5b6040516040810181811067ffffffffffffffff82111715612642576126426120b4565b604052825161265081611f3f565b81526020830151612660816123ef565b60208201529392505050565b60208082526052908201527f536572766963654d616e61676572426173652e6f6e6c7952656769737472794360408201527f6f6f7264696e61746f723a2063616c6c6572206973206e6f742074686520726560608201527133b4b9ba393c9031b7b7b93234b730ba37b960711b608082015260a00190565b6000815180845260005b8181101561270a576020818501810151868301820152016126ee565b8181111561271c576000602083870101525b50601f01601f19169290920160200192915050565b60018060a01b038316815260406020820152600082516060604084015261275b60a08401826126e4565b90506020840151606084015260408401516080840152809150509392505050565b602081526000611f7160208301846126e4565b6000828210156127a1576127a16123be565b500390565b600061ffff808316818114156127be576127be6123be565b600101939250505056fea264697066735822122054bea1a0920fd6a0e195b546ff83fa19149401ce93822a4776ad5a091bbbf62d64736f6c634300080c0033",
}

// ContractAOSServiceManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractAOSServiceManagerMetaData.ABI instead.
var ContractAOSServiceManagerABI = ContractAOSServiceManagerMetaData.ABI

// ContractAOSServiceManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractAOSServiceManagerMetaData.Bin instead.
var ContractAOSServiceManagerBin = ContractAOSServiceManagerMetaData.Bin

// DeployContractAOSServiceManager deploys a new Ethereum contract, binding an instance of ContractAOSServiceManager to it.
func DeployContractAOSServiceManager(auth *bind.TransactOpts, backend bind.ContractBackend, _avsDirectory common.Address, _registryCoordinator common.Address, _stakeRegistry common.Address) (common.Address, *types.Transaction, *ContractAOSServiceManager, error) {
	parsed, err := ContractAOSServiceManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractAOSServiceManagerBin), backend, _avsDirectory, _registryCoordinator, _stakeRegistry)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractAOSServiceManager{ContractAOSServiceManagerCaller: ContractAOSServiceManagerCaller{contract: contract}, ContractAOSServiceManagerTransactor: ContractAOSServiceManagerTransactor{contract: contract}, ContractAOSServiceManagerFilterer: ContractAOSServiceManagerFilterer{contract: contract}}, nil
}

// ContractAOSServiceManager is an auto generated Go binding around an Ethereum contract.
type ContractAOSServiceManager struct {
	ContractAOSServiceManagerCaller     // Read-only binding to the contract
	ContractAOSServiceManagerTransactor // Write-only binding to the contract
	ContractAOSServiceManagerFilterer   // Log filterer for contract events
}

// ContractAOSServiceManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractAOSServiceManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractAOSServiceManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractAOSServiceManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractAOSServiceManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractAOSServiceManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractAOSServiceManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractAOSServiceManagerSession struct {
	Contract     *ContractAOSServiceManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts              // Call options to use throughout this session
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// ContractAOSServiceManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractAOSServiceManagerCallerSession struct {
	Contract *ContractAOSServiceManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                    // Call options to use throughout this session
}

// ContractAOSServiceManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractAOSServiceManagerTransactorSession struct {
	Contract     *ContractAOSServiceManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                    // Transaction auth options to use throughout this session
}

// ContractAOSServiceManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractAOSServiceManagerRaw struct {
	Contract *ContractAOSServiceManager // Generic contract binding to access the raw methods on
}

// ContractAOSServiceManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractAOSServiceManagerCallerRaw struct {
	Contract *ContractAOSServiceManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ContractAOSServiceManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractAOSServiceManagerTransactorRaw struct {
	Contract *ContractAOSServiceManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractAOSServiceManager creates a new instance of ContractAOSServiceManager, bound to a specific deployed contract.
func NewContractAOSServiceManager(address common.Address, backend bind.ContractBackend) (*ContractAOSServiceManager, error) {
	contract, err := bindContractAOSServiceManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractAOSServiceManager{ContractAOSServiceManagerCaller: ContractAOSServiceManagerCaller{contract: contract}, ContractAOSServiceManagerTransactor: ContractAOSServiceManagerTransactor{contract: contract}, ContractAOSServiceManagerFilterer: ContractAOSServiceManagerFilterer{contract: contract}}, nil
}

// NewContractAOSServiceManagerCaller creates a new read-only instance of ContractAOSServiceManager, bound to a specific deployed contract.
func NewContractAOSServiceManagerCaller(address common.Address, caller bind.ContractCaller) (*ContractAOSServiceManagerCaller, error) {
	contract, err := bindContractAOSServiceManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractAOSServiceManagerCaller{contract: contract}, nil
}

// NewContractAOSServiceManagerTransactor creates a new write-only instance of ContractAOSServiceManager, bound to a specific deployed contract.
func NewContractAOSServiceManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractAOSServiceManagerTransactor, error) {
	contract, err := bindContractAOSServiceManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractAOSServiceManagerTransactor{contract: contract}, nil
}

// NewContractAOSServiceManagerFilterer creates a new log filterer instance of ContractAOSServiceManager, bound to a specific deployed contract.
func NewContractAOSServiceManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractAOSServiceManagerFilterer, error) {
	contract, err := bindContractAOSServiceManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractAOSServiceManagerFilterer{contract: contract}, nil
}

// bindContractAOSServiceManager binds a generic wrapper to an already deployed contract.
func bindContractAOSServiceManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractAOSServiceManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractAOSServiceManager *ContractAOSServiceManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractAOSServiceManager.Contract.ContractAOSServiceManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractAOSServiceManager *ContractAOSServiceManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.ContractAOSServiceManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractAOSServiceManager *ContractAOSServiceManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.ContractAOSServiceManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractAOSServiceManager *ContractAOSServiceManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractAOSServiceManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.contract.Transact(opts, method, params...)
}

// PAUSEDOPERTORREGISTRATION is a free data retrieval call binding the contract method 0xe9f7903f.
//
// Solidity: function PAUSED_OPERTOR_REGISTRATION() view returns(uint8)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCaller) PAUSEDOPERTORREGISTRATION(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _ContractAOSServiceManager.contract.Call(opts, &out, "PAUSED_OPERTOR_REGISTRATION")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// PAUSEDOPERTORREGISTRATION is a free data retrieval call binding the contract method 0xe9f7903f.
//
// Solidity: function PAUSED_OPERTOR_REGISTRATION() view returns(uint8)
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) PAUSEDOPERTORREGISTRATION() (uint8, error) {
	return _ContractAOSServiceManager.Contract.PAUSEDOPERTORREGISTRATION(&_ContractAOSServiceManager.CallOpts)
}

// PAUSEDOPERTORREGISTRATION is a free data retrieval call binding the contract method 0xe9f7903f.
//
// Solidity: function PAUSED_OPERTOR_REGISTRATION() view returns(uint8)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCallerSession) PAUSEDOPERTORREGISTRATION() (uint8, error) {
	return _ContractAOSServiceManager.Contract.PAUSEDOPERTORREGISTRATION(&_ContractAOSServiceManager.CallOpts)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCaller) AvsDirectory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractAOSServiceManager.contract.Call(opts, &out, "avsDirectory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) AvsDirectory() (common.Address, error) {
	return _ContractAOSServiceManager.Contract.AvsDirectory(&_ContractAOSServiceManager.CallOpts)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCallerSession) AvsDirectory() (common.Address, error) {
	return _ContractAOSServiceManager.Contract.AvsDirectory(&_ContractAOSServiceManager.CallOpts)
}

// GetNumOperators is a free data retrieval call binding the contract method 0xd989a591.
//
// Solidity: function getNumOperators() view returns(uint256)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCaller) GetNumOperators(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractAOSServiceManager.contract.Call(opts, &out, "getNumOperators")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetNumOperators is a free data retrieval call binding the contract method 0xd989a591.
//
// Solidity: function getNumOperators() view returns(uint256)
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) GetNumOperators() (*big.Int, error) {
	return _ContractAOSServiceManager.Contract.GetNumOperators(&_ContractAOSServiceManager.CallOpts)
}

// GetNumOperators is a free data retrieval call binding the contract method 0xd989a591.
//
// Solidity: function getNumOperators() view returns(uint256)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCallerSession) GetNumOperators() (*big.Int, error) {
	return _ContractAOSServiceManager.Contract.GetNumOperators(&_ContractAOSServiceManager.CallOpts)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractAOSServiceManager *ContractAOSServiceManagerCaller) GetOperatorRestakedStrategies(opts *bind.CallOpts, operator common.Address) ([]common.Address, error) {
	var out []interface{}
	err := _ContractAOSServiceManager.contract.Call(opts, &out, "getOperatorRestakedStrategies", operator)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractAOSServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractAOSServiceManager.CallOpts, operator)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractAOSServiceManager *ContractAOSServiceManagerCallerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractAOSServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractAOSServiceManager.CallOpts, operator)
}

// GetOperatorsInRange is a free data retrieval call binding the contract method 0x784afa0c.
//
// Solidity: function getOperatorsInRange(uint256 value) view returns(address[])
func (_ContractAOSServiceManager *ContractAOSServiceManagerCaller) GetOperatorsInRange(opts *bind.CallOpts, value *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _ContractAOSServiceManager.contract.Call(opts, &out, "getOperatorsInRange", value)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetOperatorsInRange is a free data retrieval call binding the contract method 0x784afa0c.
//
// Solidity: function getOperatorsInRange(uint256 value) view returns(address[])
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) GetOperatorsInRange(value *big.Int) ([]common.Address, error) {
	return _ContractAOSServiceManager.Contract.GetOperatorsInRange(&_ContractAOSServiceManager.CallOpts, value)
}

// GetOperatorsInRange is a free data retrieval call binding the contract method 0x784afa0c.
//
// Solidity: function getOperatorsInRange(uint256 value) view returns(address[])
func (_ContractAOSServiceManager *ContractAOSServiceManagerCallerSession) GetOperatorsInRange(value *big.Int) ([]common.Address, error) {
	return _ContractAOSServiceManager.Contract.GetOperatorsInRange(&_ContractAOSServiceManager.CallOpts, value)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractAOSServiceManager *ContractAOSServiceManagerCaller) GetRestakeableStrategies(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _ContractAOSServiceManager.contract.Call(opts, &out, "getRestakeableStrategies")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractAOSServiceManager.Contract.GetRestakeableStrategies(&_ContractAOSServiceManager.CallOpts)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractAOSServiceManager *ContractAOSServiceManagerCallerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractAOSServiceManager.Contract.GetRestakeableStrategies(&_ContractAOSServiceManager.CallOpts)
}

// OperatorRanges is a free data retrieval call binding the contract method 0xd50b1f4e.
//
// Solidity: function operatorRanges(address ) view returns(uint256 start, uint256 end)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCaller) OperatorRanges(opts *bind.CallOpts, arg0 common.Address) (struct {
	Start *big.Int
	End   *big.Int
}, error) {
	var out []interface{}
	err := _ContractAOSServiceManager.contract.Call(opts, &out, "operatorRanges", arg0)

	outstruct := new(struct {
		Start *big.Int
		End   *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Start = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.End = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// OperatorRanges is a free data retrieval call binding the contract method 0xd50b1f4e.
//
// Solidity: function operatorRanges(address ) view returns(uint256 start, uint256 end)
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) OperatorRanges(arg0 common.Address) (struct {
	Start *big.Int
	End   *big.Int
}, error) {
	return _ContractAOSServiceManager.Contract.OperatorRanges(&_ContractAOSServiceManager.CallOpts, arg0)
}

// OperatorRanges is a free data retrieval call binding the contract method 0xd50b1f4e.
//
// Solidity: function operatorRanges(address ) view returns(uint256 start, uint256 end)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCallerSession) OperatorRanges(arg0 common.Address) (struct {
	Start *big.Int
	End   *big.Int
}, error) {
	return _ContractAOSServiceManager.Contract.OperatorRanges(&_ContractAOSServiceManager.CallOpts, arg0)
}

// Operators is a free data retrieval call binding the contract method 0xe28d4906.
//
// Solidity: function operators(uint256 ) view returns(address)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCaller) Operators(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _ContractAOSServiceManager.contract.Call(opts, &out, "operators", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Operators is a free data retrieval call binding the contract method 0xe28d4906.
//
// Solidity: function operators(uint256 ) view returns(address)
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) Operators(arg0 *big.Int) (common.Address, error) {
	return _ContractAOSServiceManager.Contract.Operators(&_ContractAOSServiceManager.CallOpts, arg0)
}

// Operators is a free data retrieval call binding the contract method 0xe28d4906.
//
// Solidity: function operators(uint256 ) view returns(address)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCallerSession) Operators(arg0 *big.Int) (common.Address, error) {
	return _ContractAOSServiceManager.Contract.Operators(&_ContractAOSServiceManager.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractAOSServiceManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) Owner() (common.Address, error) {
	return _ContractAOSServiceManager.Contract.Owner(&_ContractAOSServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCallerSession) Owner() (common.Address, error) {
	return _ContractAOSServiceManager.Contract.Owner(&_ContractAOSServiceManager.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCaller) Paused(opts *bind.CallOpts, index uint8) (bool, error) {
	var out []interface{}
	err := _ContractAOSServiceManager.contract.Call(opts, &out, "paused", index)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) Paused(index uint8) (bool, error) {
	return _ContractAOSServiceManager.Contract.Paused(&_ContractAOSServiceManager.CallOpts, index)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCallerSession) Paused(index uint8) (bool, error) {
	return _ContractAOSServiceManager.Contract.Paused(&_ContractAOSServiceManager.CallOpts, index)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCaller) Paused0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractAOSServiceManager.contract.Call(opts, &out, "paused0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) Paused0() (*big.Int, error) {
	return _ContractAOSServiceManager.Contract.Paused0(&_ContractAOSServiceManager.CallOpts)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCallerSession) Paused0() (*big.Int, error) {
	return _ContractAOSServiceManager.Contract.Paused0(&_ContractAOSServiceManager.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCaller) PauserRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractAOSServiceManager.contract.Call(opts, &out, "pauserRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) PauserRegistry() (common.Address, error) {
	return _ContractAOSServiceManager.Contract.PauserRegistry(&_ContractAOSServiceManager.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractAOSServiceManager *ContractAOSServiceManagerCallerSession) PauserRegistry() (common.Address, error) {
	return _ContractAOSServiceManager.Contract.PauserRegistry(&_ContractAOSServiceManager.CallOpts)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactor) DeregisterOperatorFromAVS(opts *bind.TransactOpts, operator common.Address) (*types.Transaction, error) {
	return _ContractAOSServiceManager.contract.Transact(opts, "deregisterOperatorFromAVS", operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractAOSServiceManager.TransactOpts, operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractAOSServiceManager.TransactOpts, operator)
}

// Initialize is a paid mutator transaction binding the contract method 0xc350a1b5.
//
// Solidity: function initialize(address _pauserRegistry, uint256 _initialPausedStatus, address _initialOwner) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactor) Initialize(opts *bind.TransactOpts, _pauserRegistry common.Address, _initialPausedStatus *big.Int, _initialOwner common.Address) (*types.Transaction, error) {
	return _ContractAOSServiceManager.contract.Transact(opts, "initialize", _pauserRegistry, _initialPausedStatus, _initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc350a1b5.
//
// Solidity: function initialize(address _pauserRegistry, uint256 _initialPausedStatus, address _initialOwner) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) Initialize(_pauserRegistry common.Address, _initialPausedStatus *big.Int, _initialOwner common.Address) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.Initialize(&_ContractAOSServiceManager.TransactOpts, _pauserRegistry, _initialPausedStatus, _initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc350a1b5.
//
// Solidity: function initialize(address _pauserRegistry, uint256 _initialPausedStatus, address _initialOwner) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorSession) Initialize(_pauserRegistry common.Address, _initialPausedStatus *big.Int, _initialOwner common.Address) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.Initialize(&_ContractAOSServiceManager.TransactOpts, _pauserRegistry, _initialPausedStatus, _initialOwner)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactor) Pause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractAOSServiceManager.contract.Transact(opts, "pause", newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.Pause(&_ContractAOSServiceManager.TransactOpts, newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.Pause(&_ContractAOSServiceManager.TransactOpts, newPausedStatus)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactor) PauseAll(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractAOSServiceManager.contract.Transact(opts, "pauseAll")
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) PauseAll() (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.PauseAll(&_ContractAOSServiceManager.TransactOpts)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorSession) PauseAll() (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.PauseAll(&_ContractAOSServiceManager.TransactOpts)
}

// PayForRange is a paid mutator transaction binding the contract method 0x1b445516.
//
// Solidity: function payForRange(((address,uint96)[],address,uint256,uint32,uint32)[] rangePayments) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactor) PayForRange(opts *bind.TransactOpts, rangePayments []IPaymentCoordinatorRangePayment) (*types.Transaction, error) {
	return _ContractAOSServiceManager.contract.Transact(opts, "payForRange", rangePayments)
}

// PayForRange is a paid mutator transaction binding the contract method 0x1b445516.
//
// Solidity: function payForRange(((address,uint96)[],address,uint256,uint32,uint32)[] rangePayments) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) PayForRange(rangePayments []IPaymentCoordinatorRangePayment) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.PayForRange(&_ContractAOSServiceManager.TransactOpts, rangePayments)
}

// PayForRange is a paid mutator transaction binding the contract method 0x1b445516.
//
// Solidity: function payForRange(((address,uint96)[],address,uint256,uint32,uint32)[] rangePayments) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorSession) PayForRange(rangePayments []IPaymentCoordinatorRangePayment) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.PayForRange(&_ContractAOSServiceManager.TransactOpts, rangePayments)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactor) RegisterOperatorToAVS(opts *bind.TransactOpts, operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractAOSServiceManager.contract.Transact(opts, "registerOperatorToAVS", operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.RegisterOperatorToAVS(&_ContractAOSServiceManager.TransactOpts, operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.RegisterOperatorToAVS(&_ContractAOSServiceManager.TransactOpts, operator, operatorSignature)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractAOSServiceManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.RenounceOwnership(&_ContractAOSServiceManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.RenounceOwnership(&_ContractAOSServiceManager.TransactOpts)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactor) SetPauserRegistry(opts *bind.TransactOpts, newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractAOSServiceManager.contract.Transact(opts, "setPauserRegistry", newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.SetPauserRegistry(&_ContractAOSServiceManager.TransactOpts, newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.SetPauserRegistry(&_ContractAOSServiceManager.TransactOpts, newPauserRegistry)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractAOSServiceManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.TransferOwnership(&_ContractAOSServiceManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.TransferOwnership(&_ContractAOSServiceManager.TransactOpts, newOwner)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactor) Unpause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractAOSServiceManager.contract.Transact(opts, "unpause", newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.Unpause(&_ContractAOSServiceManager.TransactOpts, newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.Unpause(&_ContractAOSServiceManager.TransactOpts, newPausedStatus)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactor) UpdateAVSMetadataURI(opts *bind.TransactOpts, _metadataURI string) (*types.Transaction, error) {
	return _ContractAOSServiceManager.contract.Transact(opts, "updateAVSMetadataURI", _metadataURI)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) UpdateAVSMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.UpdateAVSMetadataURI(&_ContractAOSServiceManager.TransactOpts, _metadataURI)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorSession) UpdateAVSMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.UpdateAVSMetadataURI(&_ContractAOSServiceManager.TransactOpts, _metadataURI)
}

// UpdateOperatorRange is a paid mutator transaction binding the contract method 0x866d204b.
//
// Solidity: function updateOperatorRange(address operatorAddress, uint256 start, uint256 end) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactor) UpdateOperatorRange(opts *bind.TransactOpts, operatorAddress common.Address, start *big.Int, end *big.Int) (*types.Transaction, error) {
	return _ContractAOSServiceManager.contract.Transact(opts, "updateOperatorRange", operatorAddress, start, end)
}

// UpdateOperatorRange is a paid mutator transaction binding the contract method 0x866d204b.
//
// Solidity: function updateOperatorRange(address operatorAddress, uint256 start, uint256 end) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerSession) UpdateOperatorRange(operatorAddress common.Address, start *big.Int, end *big.Int) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.UpdateOperatorRange(&_ContractAOSServiceManager.TransactOpts, operatorAddress, start, end)
}

// UpdateOperatorRange is a paid mutator transaction binding the contract method 0x866d204b.
//
// Solidity: function updateOperatorRange(address operatorAddress, uint256 start, uint256 end) returns()
func (_ContractAOSServiceManager *ContractAOSServiceManagerTransactorSession) UpdateOperatorRange(operatorAddress common.Address, start *big.Int, end *big.Int) (*types.Transaction, error) {
	return _ContractAOSServiceManager.Contract.UpdateOperatorRange(&_ContractAOSServiceManager.TransactOpts, operatorAddress, start, end)
}

// ContractAOSServiceManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractAOSServiceManager contract.
type ContractAOSServiceManagerInitializedIterator struct {
	Event *ContractAOSServiceManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractAOSServiceManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractAOSServiceManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractAOSServiceManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractAOSServiceManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractAOSServiceManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractAOSServiceManagerInitialized represents a Initialized event raised by the ContractAOSServiceManager contract.
type ContractAOSServiceManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractAOSServiceManagerInitializedIterator, error) {

	logs, sub, err := _ContractAOSServiceManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractAOSServiceManagerInitializedIterator{contract: _ContractAOSServiceManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractAOSServiceManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractAOSServiceManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractAOSServiceManagerInitialized)
				if err := _ContractAOSServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) ParseInitialized(log types.Log) (*ContractAOSServiceManagerInitialized, error) {
	event := new(ContractAOSServiceManagerInitialized)
	if err := _ContractAOSServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractAOSServiceManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractAOSServiceManager contract.
type ContractAOSServiceManagerOwnershipTransferredIterator struct {
	Event *ContractAOSServiceManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractAOSServiceManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractAOSServiceManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractAOSServiceManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractAOSServiceManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractAOSServiceManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractAOSServiceManagerOwnershipTransferred represents a OwnershipTransferred event raised by the ContractAOSServiceManager contract.
type ContractAOSServiceManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractAOSServiceManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractAOSServiceManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractAOSServiceManagerOwnershipTransferredIterator{contract: _ContractAOSServiceManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractAOSServiceManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractAOSServiceManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractAOSServiceManagerOwnershipTransferred)
				if err := _ContractAOSServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) ParseOwnershipTransferred(log types.Log) (*ContractAOSServiceManagerOwnershipTransferred, error) {
	event := new(ContractAOSServiceManagerOwnershipTransferred)
	if err := _ContractAOSServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractAOSServiceManagerPausedIterator is returned from FilterPaused and is used to iterate over the raw logs and unpacked data for Paused events raised by the ContractAOSServiceManager contract.
type ContractAOSServiceManagerPausedIterator struct {
	Event *ContractAOSServiceManagerPaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractAOSServiceManagerPausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractAOSServiceManagerPaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractAOSServiceManagerPaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractAOSServiceManagerPausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractAOSServiceManagerPausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractAOSServiceManagerPaused represents a Paused event raised by the ContractAOSServiceManager contract.
type ContractAOSServiceManagerPaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterPaused is a free log retrieval operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) FilterPaused(opts *bind.FilterOpts, account []common.Address) (*ContractAOSServiceManagerPausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractAOSServiceManager.contract.FilterLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractAOSServiceManagerPausedIterator{contract: _ContractAOSServiceManager.contract, event: "Paused", logs: logs, sub: sub}, nil
}

// WatchPaused is a free log subscription operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) WatchPaused(opts *bind.WatchOpts, sink chan<- *ContractAOSServiceManagerPaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractAOSServiceManager.contract.WatchLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractAOSServiceManagerPaused)
				if err := _ContractAOSServiceManager.contract.UnpackLog(event, "Paused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaused is a log parse operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) ParsePaused(log types.Log) (*ContractAOSServiceManagerPaused, error) {
	event := new(ContractAOSServiceManagerPaused)
	if err := _ContractAOSServiceManager.contract.UnpackLog(event, "Paused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractAOSServiceManagerPauserRegistrySetIterator is returned from FilterPauserRegistrySet and is used to iterate over the raw logs and unpacked data for PauserRegistrySet events raised by the ContractAOSServiceManager contract.
type ContractAOSServiceManagerPauserRegistrySetIterator struct {
	Event *ContractAOSServiceManagerPauserRegistrySet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractAOSServiceManagerPauserRegistrySetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractAOSServiceManagerPauserRegistrySet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractAOSServiceManagerPauserRegistrySet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractAOSServiceManagerPauserRegistrySetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractAOSServiceManagerPauserRegistrySetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractAOSServiceManagerPauserRegistrySet represents a PauserRegistrySet event raised by the ContractAOSServiceManager contract.
type ContractAOSServiceManagerPauserRegistrySet struct {
	PauserRegistry    common.Address
	NewPauserRegistry common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterPauserRegistrySet is a free log retrieval operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) FilterPauserRegistrySet(opts *bind.FilterOpts) (*ContractAOSServiceManagerPauserRegistrySetIterator, error) {

	logs, sub, err := _ContractAOSServiceManager.contract.FilterLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return &ContractAOSServiceManagerPauserRegistrySetIterator{contract: _ContractAOSServiceManager.contract, event: "PauserRegistrySet", logs: logs, sub: sub}, nil
}

// WatchPauserRegistrySet is a free log subscription operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) WatchPauserRegistrySet(opts *bind.WatchOpts, sink chan<- *ContractAOSServiceManagerPauserRegistrySet) (event.Subscription, error) {

	logs, sub, err := _ContractAOSServiceManager.contract.WatchLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractAOSServiceManagerPauserRegistrySet)
				if err := _ContractAOSServiceManager.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePauserRegistrySet is a log parse operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) ParsePauserRegistrySet(log types.Log) (*ContractAOSServiceManagerPauserRegistrySet, error) {
	event := new(ContractAOSServiceManagerPauserRegistrySet)
	if err := _ContractAOSServiceManager.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractAOSServiceManagerUnpausedIterator is returned from FilterUnpaused and is used to iterate over the raw logs and unpacked data for Unpaused events raised by the ContractAOSServiceManager contract.
type ContractAOSServiceManagerUnpausedIterator struct {
	Event *ContractAOSServiceManagerUnpaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractAOSServiceManagerUnpausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractAOSServiceManagerUnpaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractAOSServiceManagerUnpaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractAOSServiceManagerUnpausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractAOSServiceManagerUnpausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractAOSServiceManagerUnpaused represents a Unpaused event raised by the ContractAOSServiceManager contract.
type ContractAOSServiceManagerUnpaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterUnpaused is a free log retrieval operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) FilterUnpaused(opts *bind.FilterOpts, account []common.Address) (*ContractAOSServiceManagerUnpausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractAOSServiceManager.contract.FilterLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractAOSServiceManagerUnpausedIterator{contract: _ContractAOSServiceManager.contract, event: "Unpaused", logs: logs, sub: sub}, nil
}

// WatchUnpaused is a free log subscription operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) WatchUnpaused(opts *bind.WatchOpts, sink chan<- *ContractAOSServiceManagerUnpaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractAOSServiceManager.contract.WatchLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractAOSServiceManagerUnpaused)
				if err := _ContractAOSServiceManager.contract.UnpackLog(event, "Unpaused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnpaused is a log parse operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractAOSServiceManager *ContractAOSServiceManagerFilterer) ParseUnpaused(log types.Log) (*ContractAOSServiceManagerUnpaused, error) {
	event := new(ContractAOSServiceManagerUnpaused)
	if err := _ContractAOSServiceManager.contract.UnpackLog(event, "Unpaused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
